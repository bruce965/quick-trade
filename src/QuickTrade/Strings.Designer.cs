//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuickTrade {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QuickTrade.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create and configure a new project.
        /// </summary>
        internal static string Command_Init {
            get {
                return ResourceManager.GetString("Command_Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to create a custom plugin project?.
        /// </summary>
        internal static string Command_Init_Plugin {
            get {
                return ResourceManager.GetString("Command_Init_Plugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental trading bot.
        /// </summary>
        internal static string Command_Main {
            get {
                return ResourceManager.GetString("Command_Main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new project or plugin.
        /// </summary>
        internal static string Command_New {
            get {
                return ResourceManager.GetString("Command_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new empty plugin..
        /// </summary>
        internal static string Command_NewPlugin {
            get {
                return ResourceManager.GetString("Command_NewPlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add project to existing solution &apos;{0}&apos;?.
        /// </summary>
        internal static string Command_NewPlugin_AddToSolution {
            get {
                return ResourceManager.GetString("Command_NewPlugin_AddToSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to configure plugin services.
        /// </summary>
        internal static string Command_NewPlugin_ConfigureServices {
            get {
                return ResourceManager.GetString("Command_NewPlugin_ConfigureServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin name:.
        /// </summary>
        internal static string Command_NewPlugin_Name {
            get {
                return ResourceManager.GetString("Command_NewPlugin_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyPlugin.
        /// </summary>
        internal static string Command_NewPlugin_Name_Default {
            get {
                return ResourceManager.GetString("Command_NewPlugin_Name_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugin project path:.
        /// </summary>
        internal static string Command_NewPlugin_Path {
            get {
                return ResourceManager.GetString("Command_NewPlugin_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new solution?.
        /// </summary>
        internal static string Command_NewPlugin_Solution {
            get {
                return ResourceManager.GetString("Command_NewPlugin_Solution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution name:.
        /// </summary>
        internal static string Command_NewPlugin_Solution_Name {
            get {
                return ResourceManager.GetString("Command_NewPlugin_Solution_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MyPlugins.sln.
        /// </summary>
        internal static string Command_NewPlugin_Solution_Name_Default {
            get {
                return ResourceManager.GetString("Command_NewPlugin_Solution_Name_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new empty project.
        /// </summary>
        internal static string Command_NewProject {
            get {
                return ResourceManager.GetString("Command_NewProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project directory is not empty, do you want to proceed anyways?.
        /// </summary>
        internal static string Command_NewProject_NotEmpty {
            get {
                return ResourceManager.GetString("Command_NewProject_NotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing configuration is not valid, do you want to overwrite it?.
        /// </summary>
        internal static string Command_NewProject_OverwiteInvalidProject {
            get {
                return ResourceManager.GetString("Command_NewProject_OverwiteInvalidProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a new project in: {0}.
        /// </summary>
        internal static string Command_NewProject_Path {
            get {
                return ResourceManager.GetString("Command_NewProject_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start service.
        /// </summary>
        internal static string Command_Start {
            get {
                return ResourceManager.GetString("Command_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid project directory: no &apos;{0}&apos; file found..
        /// </summary>
        internal static string Error_InvalidProjectDirectory {
            get {
                return ResourceManager.GetString("Error_InvalidProjectDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while parsing &apos;{0}&apos; project file: {1}.
        /// </summary>
        internal static string Error_InvalidProjectFile {
            get {
                return ResourceManager.GetString("Error_InvalidProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation aborted..
        /// </summary>
        internal static string Operation_Aborted {
            get {
                return ResourceManager.GetString("Operation_Aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Done!.
        /// </summary>
        internal static string Operation_Completed {
            get {
                return ResourceManager.GetString("Operation_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use default options without asking for confirmation.
        /// </summary>
        internal static string Option_AcceptDefaults {
            get {
                return ResourceManager.GetString("Option_AcceptDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show debug logs.
        /// </summary>
        internal static string Option_DebugLog {
            get {
                return ResourceManager.GetString("Option_DebugLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable development mode, reloading plugins and configuration on change.
        /// </summary>
        internal static string Option_DevelopmentMode {
            get {
                return ResourceManager.GetString("Option_DevelopmentMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use default options without asking for confirmation, even for destructive operations.
        /// </summary>
        internal static string Option_ForceAcceptDefaults {
            get {
                return ResourceManager.GetString("Option_ForceAcceptDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set project directory.
        /// </summary>
        internal static string Option_ProjectDirectory {
            get {
                return ResourceManager.GetString("Option_ProjectDirectory", resourceCulture);
            }
        }
    }
}
